
Bootstrap a new service:

  - spawner creates a random one-time-password
  - spawner creates a new service job via saga-python, passing one-time-passwd in env
  - new service uses one-time-pass to fetch public master key
    - if that fails (connectivity issues etc), job fails with exit code 2
  - spawner contacts new service with private master key, ensuring that
    setup worked, and configures service for the intended purpose
    - create virtualenv
    - fetch SAGA-Python, Sinon modules
    - spawn real service, passing the public master key along
      - real service can be 
        - communication bridge
        - agent
        - pilot manager
        - queue service
        - pub/sub server
      - each real service accepts request on a management port to create
        new services, allowing to span the fabric.
        desktop -> gateway -> head node -> compute node
    - real service pings back to master

PS: consider what happens on disconnect (head-node service gets
    killed...) -- how can key-chain be re-created?  Probably needs
    keep-alive from the leave nodes...


