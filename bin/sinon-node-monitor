#!/usr/bin/python

"""
.. module:: sinon.bin.sinon-node-monitor
   :platform: Unix
   :synopsis: Node monitor command line tool.

.. moduleauthor:: Ole Weidner <ole.weidner@rutgers.edu>
"""

__copyright__ = "Copyright 2013, radical.rutgers.edu"
__license__   = "MIT"

import sys
import signal
import time
import optparse

from sinon.utils.logo import print_startup_logo
from sinon.agent.nodemonitor import NodeMonitor

#-----------------------------------------------------------------------------
#
def parse_commandline():

    parser = optparse.OptionParser()

    parser.add_option('-w', '--workdir',
                      metavar='DIR',
                      dest='workdir',
                      help='Specifies the working directory for the node monitor.')


    parser.add_option('-m', '--task-metrics',
                      metavar='URL',
                      dest='task_metrics_url',
                      help='Specifies the location where to publish task metrics.')

    install_opts = optparse.OptionGroup(
        parser, 'Monitoring Options', 'These options control monitoring',
    )
    install_opts.add_option('--dummy_1', action='store_true', default=False,
                            help='Dummy Option')
    parser.add_option_group(install_opts)

    # parse the whole shebang
    (options, args) = parser.parse_args()

    print_startup_logo("Node Monitor")

    if options.workdir is None:
        parser.error("Working directory URL (-w/--workdir) must be defined. Try --help for help.")

    return options


#-----------------------------------------------------------------------------
#
def _signal_handler(signum, frame):
    print 'Signal handler called with signal', signum
    print 'EXITING'
    sys.exit(0)

for sig in [signal.SIGTERM, signal.SIGINT, signal.SIGHUP, signal.SIGQUIT]:
    signal.signal(sig, _signal_handler)

if __name__ == "__main__":

    options = parse_commandline()

    nm = NodeMonitor(workdir=options.workdir)

    sys.exit(nm.run())
